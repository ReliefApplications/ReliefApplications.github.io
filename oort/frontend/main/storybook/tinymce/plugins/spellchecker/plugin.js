!function(){"use strict";var Cell=function(initial){var value=initial;return{get:function(){return value},set:function(v){value=v}}},global$3=tinymce.util.Tools.resolve("tinymce.PluginManager"),hasOwnProperty=Object.hasOwnProperty,global$2=tinymce.util.Tools.resolve("tinymce.util.Tools"),global$1=tinymce.util.Tools.resolve("tinymce.util.URI"),global=tinymce.util.Tools.resolve("tinymce.util.XHR"),getRpcUrl=function(editor){return editor.getParam("spellchecker_rpc_url")},getSpellcheckerWordcharPattern=function(editor){var defaultPattern=new RegExp('[^\\s!"#$%&()*+,-./:;<=>?@[\\]^_{|}`§©«®±¶·¸»¼½¾¿×÷¤”“„    ]+',"g");return editor.getParam("spellchecker_wordchar_pattern",defaultPattern)},isContentEditableFalse=function(node){return node&&1===node.nodeType&&"false"===node.contentEditable},DomTextMatcher=function(node,editor){var m,matches=[],dom=editor.dom,blockElementsMap=editor.schema.getBlockElements(),hiddenTextElementsMap=editor.schema.getWhiteSpaceElements(),shortEndedElementsMap=editor.schema.getShortEndedElements(),createMatch=function(m,data){if(!m[0])throw new Error("findAndReplaceDOMText cannot handle zero-length matches");return{start:m.index,end:m.index+m[0].length,text:m[0],data}},getText=function(node){if(3===node.nodeType)return node.data;if(hiddenTextElementsMap[node.nodeName]&&!blockElementsMap[node.nodeName])return"";if(isContentEditableFalse(node))return"\n";var txt="";if((blockElementsMap[node.nodeName]||shortEndedElementsMap[node.nodeName])&&(txt+="\n"),node=node.firstChild)do{txt+=getText(node)}while(node=node.nextSibling);return txt},unwrapElement=function(element){for(var parentNode=element.parentNode;element.childNodes.length>0;)parentNode.insertBefore(element.childNodes[0],element);parentNode.removeChild(element)},getWrappersByIndex=function(index){var elements=node.getElementsByTagName("*"),wrappers=[];index="number"==typeof index?""+index:null;for(var i=0;i<elements.length;i++){var element=elements[i],dataIndex=element.getAttribute("data-mce-index");null!==dataIndex&&dataIndex.length&&-1!==element.className.indexOf("mce-spellchecker-word")&&(dataIndex!==index&&null!==index||wrappers.push(element))}return wrappers},indexOf=function(match){for(var i=matches.length;i--;)if(matches[i]===match)return i;return-1};function each(callback){for(var i=0,l=matches.length;i<l&&!1!==callback(matches[i],i);i++);return this}function unwrap(match){var i,elements=getWrappersByIndex(match?indexOf(match):null);for(i=elements.length;i--;)unwrapElement(elements[i]);return this}var rangeFromMatch=function(match){var wrappers=getWrappersByIndex(indexOf(match)),rng=editor.dom.createRng();return rng.setStartBefore(wrappers[0]),rng.setEndAfter(wrappers[wrappers.length-1]),rng};var text=getText(node);return{text,matches,each,filter:function filter(callback){var filteredMatches=[];return each((function(match,i){callback(match,i)&&filteredMatches.push(match)})),matches=filteredMatches,this},reset:function reset(){return matches.splice(0,matches.length),unwrap(),this},matchFromElement:function(element){return matches[element.getAttribute("data-mce-index")]},elementFromMatch:function(match){return getWrappersByIndex(indexOf(match))[0]},find:function find(regex,data){if(text&&regex.global)for(;m=regex.exec(text);)matches.push(createMatch(m,data));return this},add:function add(start,length,data){return matches.push({start,end:start+length,text:text.substr(start,length),data}),this},wrap:function wrap(callback){return matches.length&&function(node,matches,replaceFn){var startNode,endNode,startNodeIndex,endNodeIndex,matchLocation,innerNodes=[],atIndex=0,curNode=node,matchIndex=0;(matches=matches.slice(0)).sort((function(a,b){return a.start-b.start})),matchLocation=matches.shift();out:for(;;){if((blockElementsMap[curNode.nodeName]||shortEndedElementsMap[curNode.nodeName]||isContentEditableFalse(curNode))&&atIndex++,3===curNode.nodeType&&(!endNode&&curNode.length+atIndex>=matchLocation.end?(endNode=curNode,endNodeIndex=matchLocation.end-atIndex):startNode&&innerNodes.push(curNode),!startNode&&curNode.length+atIndex>matchLocation.start&&(startNode=curNode,startNodeIndex=matchLocation.start-atIndex),atIndex+=curNode.length),startNode&&endNode){if(curNode=replaceFn({startNode,startNodeIndex,endNode,endNodeIndex,innerNodes,match:matchLocation.text,matchIndex}),atIndex-=endNode.length-endNodeIndex,startNode=null,endNode=null,innerNodes=[],matchIndex++,!(matchLocation=matches.shift()))break}else if(hiddenTextElementsMap[curNode.nodeName]&&!blockElementsMap[curNode.nodeName]||!curNode.firstChild){if(curNode.nextSibling){curNode=curNode.nextSibling;continue}}else if(!isContentEditableFalse(curNode)){curNode=curNode.firstChild;continue}for(;;){if(curNode.nextSibling){curNode=curNode.nextSibling;break}if(curNode.parentNode===node)break out;curNode=curNode.parentNode}}}(node,matches,function(callback){var makeReplacementNode=function(fill,matchIndex){var match=matches[matchIndex];match.stencil||(match.stencil=callback(match));var clone=match.stencil.cloneNode(!1);return clone.setAttribute("data-mce-index",""+matchIndex),fill&&clone.appendChild(dom.doc.createTextNode(fill)),clone};return function(range){var before,after,parentNode,startNode=range.startNode,endNode=range.endNode,matchIndex=range.matchIndex,doc=dom.doc;if(startNode===endNode){var node_1=startNode;parentNode=node_1.parentNode,range.startNodeIndex>0&&(before=doc.createTextNode(node_1.data.substring(0,range.startNodeIndex)),parentNode.insertBefore(before,node_1));var el=makeReplacementNode(range.match,matchIndex);return parentNode.insertBefore(el,node_1),range.endNodeIndex<node_1.length&&(after=doc.createTextNode(node_1.data.substring(range.endNodeIndex)),parentNode.insertBefore(after,node_1)),node_1.parentNode.removeChild(node_1),el}before=doc.createTextNode(startNode.data.substring(0,range.startNodeIndex)),after=doc.createTextNode(endNode.data.substring(range.endNodeIndex));for(var elA=makeReplacementNode(startNode.data.substring(range.startNodeIndex),matchIndex),i=0,l=range.innerNodes.length;i<l;++i){var innerNode=range.innerNodes[i],innerEl=makeReplacementNode(innerNode.data,matchIndex);innerNode.parentNode.replaceChild(innerEl,innerNode)}var elB=makeReplacementNode(endNode.data.substring(0,range.endNodeIndex),matchIndex);return(parentNode=startNode.parentNode).insertBefore(before,startNode),parentNode.insertBefore(elA,startNode),parentNode.removeChild(startNode),(parentNode=endNode.parentNode).insertBefore(elB,endNode),parentNode.insertBefore(after,endNode),parentNode.removeChild(endNode),elB}}(callback)),this},unwrap,replace:function(match,text){var rng=rangeFromMatch(match);return rng.deleteContents(),text.length>0&&rng.insertNode(editor.dom.doc.createTextNode(text)),rng},rangeFromMatch,indexOf}},getTextMatcher=function(editor,textMatcherState){if(!textMatcherState.get()){var textMatcher=DomTextMatcher(editor.getBody(),editor);textMatcherState.set(textMatcher)}return textMatcherState.get()},sendRpcCall=function(editor,pluginUrl,currentLanguageState,name,data,successCallback,errorCallback){var userSpellcheckCallback=function(editor){return editor.getParam("spellchecker_callback")}(editor),spellCheckCallback=userSpellcheckCallback||function(editor,pluginUrl,currentLanguageState){return function(method,text,doneCallback,errorCallback){var data={method,lang:currentLanguageState.get()},postData="";data["addToDictionary"===method?"word":"text"]=text,global$2.each(data,(function(value,key){postData&&(postData+="&"),postData+=key+"="+encodeURIComponent(value)})),global.send({url:new global$1(pluginUrl).toAbsolute(getRpcUrl(editor)),type:"post",content_type:"application/x-www-form-urlencoded",data:postData,success:function(result){var parseResult=JSON.parse(result);if(parseResult)parseResult.error?errorCallback(parseResult.error):doneCallback(parseResult);else{var message=editor.translate("Server response wasn't proper JSON.");errorCallback(message)}},error:function(){var message=editor.translate("The spelling service was not found: (")+getRpcUrl(editor)+editor.translate(")");errorCallback(message)}})}}(editor,pluginUrl,currentLanguageState);spellCheckCallback.call(editor.plugins.spellchecker,name,data,successCallback,errorCallback)},spellcheck=function(editor,pluginUrl,startedState,textMatcherState,lastSuggestionsState,currentLanguageState){if(!finish(editor,startedState,textMatcherState)){editor.setProgressState(!0),sendRpcCall(editor,pluginUrl,currentLanguageState,"spellcheck",getTextMatcher(editor,textMatcherState).text,(function(data){markErrors(editor,startedState,textMatcherState,lastSuggestionsState,data)}),(function(message){editor.notificationManager.open({text:message,type:"error"}),editor.setProgressState(!1),finish(editor,startedState,textMatcherState)})),editor.focus()}},checkIfFinished=function(editor,startedState,textMatcherState){editor.dom.select("span.mce-spellchecker-word").length||finish(editor,startedState,textMatcherState)},ignoreWord=function(editor,startedState,textMatcherState,word,spans,all){editor.selection.collapse(),all?global$2.each(editor.dom.select("span.mce-spellchecker-word"),(function(span){span.getAttribute("data-mce-word")===word&&editor.dom.remove(span,!0)})):editor.dom.remove(spans,!0),checkIfFinished(editor,startedState,textMatcherState)},finish=function(editor,startedState,textMatcherState){var bookmark=editor.selection.getBookmark();if(getTextMatcher(editor,textMatcherState).reset(),editor.selection.moveToBookmark(bookmark),textMatcherState.set(null),startedState.get())return startedState.set(!1),function(editor){editor.fire("SpellcheckEnd")}(editor),!0},getElmIndex=function(elm){var value=elm.getAttribute("data-mce-index");return"number"==typeof value?""+value:value},markErrors=function(editor,startedState,textMatcherState,lastSuggestionsState,data){var hasDictionarySupport=!!data.dictionary,suggestions=data.words;if(editor.setProgressState(!1),function(r){for(var x in r)if(hasOwnProperty.call(r,x))return!1;return!0}(suggestions)){var message=editor.translate("No misspellings found.");return editor.notificationManager.open({text:message,type:"info"}),void startedState.set(!1)}lastSuggestionsState.set({suggestions,hasDictionarySupport});var bookmark=editor.selection.getBookmark();getTextMatcher(editor,textMatcherState).find(getSpellcheckerWordcharPattern(editor)).filter((function(match){return!!suggestions[match.text]})).wrap((function(match){return editor.dom.create("span",{class:"mce-spellchecker-word","aria-invalid":"spelling","data-mce-bogus":1,"data-mce-word":match.text})})),editor.selection.moveToBookmark(bookmark),startedState.set(!0),function(editor){editor.fire("SpellcheckStart")}(editor)},__assign=function(){return __assign=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},spellcheckerEvents="SpellcheckStart SpellcheckEnd",register=function(editor,pluginUrl,startedState,textMatcherState,currentLanguageState,lastSuggestionsState){var languageValues,items,languageMenuItems=(languageValues=function(editor){return global$2.map(function(editor){return editor.getParam("spellchecker_languages","English=en,Danish=da,Dutch=nl,Finnish=fi,French=fr_FR,German=de,Italian=it,Polish=pl,Portuguese=pt_BR,Spanish=es,Swedish=sv")}(editor).split(","),(function(langPair){var langPairs=langPair.split("=");return{name:langPairs[0],value:langPairs[1]}}))}(editor),items=[],global$2.each(languageValues,(function(languageValue){items.push({selectable:!0,text:languageValue.name,data:languageValue.value})})),items),startSpellchecking=function(){spellcheck(editor,pluginUrl,startedState,textMatcherState,lastSuggestionsState,currentLanguageState)},buttonArgs={tooltip:"Spellcheck",onAction:startSpellchecking,icon:"spell-check",onSetup:function(buttonApi){var setButtonState=function(){buttonApi.setActive(startedState.get())};return editor.on(spellcheckerEvents,setButtonState),function(){editor.off(spellcheckerEvents,setButtonState)}}},splitButtonArgs=__assign(__assign({},buttonArgs),{type:"splitbutton",select:function(value){return value===currentLanguageState.get()},fetch:function(callback){callback(global$2.map(languageMenuItems,(function(languageItem){return{type:"choiceitem",value:languageItem.data,text:languageItem.text}})))},onItemAction:function(splitButtonApi,value){currentLanguageState.set(value)}});languageMenuItems.length>1?editor.ui.registry.addSplitButton("spellchecker",splitButtonArgs):editor.ui.registry.addToggleButton("spellchecker",buttonArgs),editor.ui.registry.addToggleMenuItem("spellchecker",{text:"Spellcheck",icon:"spell-check",onSetup:function(menuApi){menuApi.setActive(startedState.get());var setMenuItemCheck=function(){menuApi.setActive(startedState.get())};return editor.on(spellcheckerEvents,setMenuItemCheck),function(){editor.off(spellcheckerEvents,setMenuItemCheck)}},onAction:startSpellchecking})},getSuggestions=function(editor,pluginUrl,lastSuggestionsState,startedState,textMatcherState,currentLanguageState,word,spans){var items=[],suggestions=lastSuggestionsState.get().suggestions[word];return global$2.each(suggestions,(function(suggestion){items.push({text:suggestion,onAction:function(){editor.insertContent(editor.dom.encode(suggestion)),editor.dom.remove(spans),checkIfFinished(editor,startedState,textMatcherState)}})})),lastSuggestionsState.get().hasDictionarySupport&&(items.push({type:"separator"}),items.push({text:"Add to dictionary",onAction:function(){!function(editor,pluginUrl,startedState,textMatcherState,currentLanguageState,word,spans){editor.setProgressState(!0),sendRpcCall(editor,pluginUrl,currentLanguageState,"addToDictionary",word,(function(){editor.setProgressState(!1),editor.dom.remove(spans,!0),checkIfFinished(editor,startedState,textMatcherState)}),(function(message){editor.notificationManager.open({text:message,type:"error"}),editor.setProgressState(!1)}))}(editor,pluginUrl,startedState,textMatcherState,currentLanguageState,word,spans)}})),items.push.apply(items,[{type:"separator"},{text:"Ignore",onAction:function(){ignoreWord(editor,startedState,textMatcherState,word,spans)}},{text:"Ignore all",onAction:function(){ignoreWord(editor,startedState,textMatcherState,word,spans,true)}}]),items},setup=function(editor,pluginUrl,lastSuggestionsState,startedState,textMatcherState,currentLanguageState){editor.ui.registry.addContextMenu("spellchecker",{update:function(element){var target=element;if("mce-spellchecker-word"!==target.className)return[];var spans=function(editor,index){var spans=[],nodes=global$2.toArray(editor.getBody().getElementsByTagName("span"));if(nodes.length)for(var i=0;i<nodes.length;i++){var nodeIndex=getElmIndex(nodes[i]);null!==nodeIndex&&nodeIndex.length&&nodeIndex===index.toString()&&spans.push(nodes[i])}return spans}(editor,getElmIndex(target));if(spans.length>0){var rng=editor.dom.createRng();return rng.setStartBefore(spans[0]),rng.setEndAfter(spans[spans.length-1]),editor.selection.setRng(rng),getSuggestions(editor,pluginUrl,lastSuggestionsState,startedState,textMatcherState,currentLanguageState,target.getAttribute("data-mce-word"),spans)}}})};!function Plugin(){global$3.add("spellchecker",(function(editor,pluginUrl){if(!1===function(editor){return!!editor.hasPlugin("tinymcespellchecker",!0)&&(void 0!==window.console&&window.console.log&&window.console.log("Spell Checker Pro is incompatible with Spell Checker plugin! Remove 'spellchecker' from the 'plugins' option."),!0)}(editor)){var startedState=Cell(!1),currentLanguageState=Cell(function(editor){var defaultLanguage=editor.getParam("language","en");return editor.getParam("spellchecker_language",defaultLanguage)}(editor)),textMatcherState=Cell(null),lastSuggestionsState=Cell(null);return register(editor,pluginUrl,startedState,textMatcherState,currentLanguageState,lastSuggestionsState),setup(editor,pluginUrl,lastSuggestionsState,startedState,textMatcherState,currentLanguageState),function(editor,pluginUrl,startedState,textMatcherState,lastSuggestionsState,currentLanguageState){editor.addCommand("mceSpellCheck",(function(){spellcheck(editor,pluginUrl,startedState,textMatcherState,lastSuggestionsState,currentLanguageState)}))}(editor,pluginUrl,startedState,textMatcherState,lastSuggestionsState,currentLanguageState),function(editor,startedState,lastSuggestionsState,textMatcherState,currentLanguageState){return{getTextMatcher:textMatcherState.get,getWordCharPattern:function(){return getSpellcheckerWordcharPattern(editor)},markErrors:function(data){markErrors(editor,startedState,textMatcherState,lastSuggestionsState,data)},getLanguage:currentLanguageState.get}}(editor,startedState,lastSuggestionsState,textMatcherState,currentLanguageState)}}))}()}();