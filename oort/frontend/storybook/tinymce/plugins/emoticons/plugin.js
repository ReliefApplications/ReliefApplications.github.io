!function(){"use strict";var t,call,id,merger,global$3=tinymce.util.Tools.resolve("tinymce.PluginManager"),isNull=(t=null,function(a){return t===a}),noop=function(){},constant=function(value){return function(){return value}},identity=function(x){return x},never=constant(!1),always=constant(!0),none=function(){return NONE},NONE={fold:function(n,_s){return n()},isSome:never,isNone:always,getOr:id=identity,getOrThunk:call=function(thunk){return thunk()},getOrDie:function(msg){throw new Error(msg||"error: getOrDie called on none.")},getOrNull:constant(null),getOrUndefined:constant(void 0),or:id,orThunk:call,map:none,each:noop,bind:none,exists:never,forall:always,filter:function(){return none()},toArray:function(){return[]},toString:constant("none()")},some=function(a){var constant_a=constant(a),self=function(){return me},bind=function(f){return f(a)},me={fold:function(n,s){return s(a)},isSome:always,isNone:never,getOr:constant_a,getOrThunk:constant_a,getOrDie:constant_a,getOrNull:constant_a,getOrUndefined:constant_a,or:self,orThunk:self,map:function(f){return some(f(a))},each:function(f){f(a)},bind:bind,exists:bind,forall:bind,filter:function(f){return f(a)?me:NONE},toArray:function(){return[a]},toString:function(){return"some("+a+")"}};return me},Optional={some:some,none:none,from:function(value){return null==value?NONE:some(value)}},map$1=function(xs,f){for(var len=xs.length,r=new Array(len),i=0;i<len;i++){var x=xs[i];r[i]=f(x,i)}return r},Cell=function(initial){var value=initial;return{get:function(){return value},set:function(v){value=v}}},__assign=function(){return(__assign=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},keys=Object.keys,hasOwnProperty=Object.hasOwnProperty,each=function(obj,f){for(var props=keys(obj),k=0,len=props.length;k<len;k++){var i=props[k];f(obj[i],i)}},tupleMap=function(obj,f){var r={};return each(obj,(function(x,i){var tuple=f(x,i);r[tuple.k]=tuple.v})),r},has=function(obj,key){return hasOwnProperty.call(obj,key)},merge=(merger=function(old,nu){return nu},function(){for(var objects=[],_i=0;_i<arguments.length;_i++)objects[_i]=arguments[_i];if(0===objects.length)throw new Error("Can't merge zero objects");for(var ret={},j=0;j<objects.length;j++){var curObject=objects[j];for(var key in curObject)has(curObject,key)&&(ret[key]=merger(ret[key],curObject[key]))}return ret}),value=function(){var subject=function(doRevoke){var subject=Cell(Optional.none()),revoke=function(){return subject.get().each(doRevoke)};return{clear:function(){revoke(),subject.set(Optional.none())},isSet:function(){return subject.get().isSome()},get:function(){return subject.get()},set:function(s){revoke(),subject.set(Optional.some(s))}}}(noop);return __assign(__assign({},subject),{on:function(f){return subject.get().each(f)}})},contains=function(str,substr){return-1!==str.indexOf(substr)},global$2=tinymce.util.Tools.resolve("tinymce.Resource"),global$1=tinymce.util.Tools.resolve("tinymce.util.Delay"),global=tinymce.util.Tools.resolve("tinymce.util.Promise"),ALL_CATEGORY="All",categoryNameMap={symbols:"Symbols",people:"People",animals_and_nature:"Animals and Nature",food_and_drink:"Food and Drink",activity:"Activity",travel_and_places:"Travel and Places",objects:"Objects",flags:"Flags",user:"User Defined"},translateCategory=function(categories,name){return has(categories,name)?categories[name]:name},getUserDefinedEmoticons=function(editor){var f,userDefinedEmoticons=function(editor){return editor.getParam("emoticons_append",{},"object")}(editor);return f=function(value){return __assign({keywords:[],category:"user"},value)},tupleMap(userDefinedEmoticons,(function(x,i){return{k:i,v:f(x,i)}}))},initDatabase=function(editor,databaseUrl,databaseId){var categories=value(),all=value(),emojiImagesUrl=function(editor){return editor.getParam("emoticons_images_url","https://twemoji.maxcdn.com/v/13.0.1/72x72/","string")}(editor),getEmoji=function(lib){return function(str,substr,start){return""===substr||str.length>=substr.length&&str.substr(start,start+substr.length)===substr}(lib.char,"<img",0)?lib.char.replace(/src="([^"]+)"/,(function(match,url){return'src="'+emojiImagesUrl+url+'"'})):lib.char};editor.on("init",(function(){global$2.load(databaseId,databaseUrl).then((function(emojis){var userEmojis=getUserDefinedEmoticons(editor);!function(emojis){var cats={},everything=[];each(emojis,(function(lib,title){var entry={title:title,keywords:lib.keywords,char:getEmoji(lib),category:translateCategory(categoryNameMap,lib.category)},current=void 0!==cats[entry.category]?cats[entry.category]:[];cats[entry.category]=current.concat([entry]),everything.push(entry)})),categories.set(cats),all.set(everything)}(merge(emojis,userEmojis))}),(function(err){console.log("Failed to load emoticons: "+err),categories.set({}),all.set([])}))}));var listAll=function(){return all.get().getOr([])},hasLoaded=function(){return categories.isSet()&&all.isSet()};return{listCategories:function(){return[ALL_CATEGORY].concat(keys(categories.get().getOr({})))},hasLoaded:hasLoaded,waitForLoad:function(){return hasLoaded()?global.resolve(!0):new global((function(resolve,reject){var numRetries=15,interval=global$1.setInterval((function(){hasLoaded()?(global$1.clearInterval(interval),resolve(!0)):--numRetries<0&&(console.log("Could not load emojis from url: "+databaseUrl),global$1.clearInterval(interval),reject(!1))}),100)}))},listAll:listAll,listCategory:function(category){return category===ALL_CATEGORY?listAll():categories.get().bind((function(cats){return Optional.from(cats[category])})).getOr([])}}},emojiMatches=function(emoji,lowerCasePattern){return contains(emoji.title.toLowerCase(),lowerCasePattern)||function(xs,pred){for(var i=0,len=xs.length;i<len;i++)if(pred(xs[i],i))return!0;return!1}(emoji.keywords,(function(k){return contains(k.toLowerCase(),lowerCasePattern)}))},emojisFrom=function(list,pattern,maxResults){for(var matches=[],lowerCasePattern=pattern.toLowerCase(),reachedLimit=maxResults.fold((function(){return never}),(function(max){return function(size){return size>=max}})),i=0;i<list.length&&(0!==pattern.length&&!emojiMatches(list[i],lowerCasePattern)||(matches.push({value:list[i].char,text:list[i].title,icon:list[i].char}),!reachedLimit(matches.length)));i++);return matches},open=function(editor,database){var fn,rate,timer,cancel,initialState={pattern:"",results:emojisFrom(database.listAll(),"",Optional.some(300))},currentTab=Cell(ALL_CATEGORY),updateFilter=(fn=function(dialogApi){!function(dialogApi){var dialogData=dialogApi.getData(),category=currentTab.get(),candidates=database.listCategory(category),results=emojisFrom(candidates,dialogData.pattern,category===ALL_CATEGORY?Optional.some(300):Optional.none());dialogApi.setData({results:results})}(dialogApi)},rate=200,timer=null,{cancel:cancel=function(){isNull(timer)||(clearTimeout(timer),timer=null)},throttle:function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];cancel(),timer=setTimeout((function(){timer=null,fn.apply(null,args)}),rate)}}),searchField={label:"Search",type:"input",name:"pattern"},resultsField={type:"collection",name:"results"},getInitialState=function(){return{title:"Emoticons",size:"normal",body:{type:"tabpanel",tabs:map$1(database.listCategories(),(function(cat){return{title:cat,name:cat,items:[searchField,resultsField]}}))},initialData:initialState,onTabChange:function(dialogApi,details){currentTab.set(details.newTabName),updateFilter.throttle(dialogApi)},onChange:updateFilter.throttle,onAction:function(dialogApi,actionData){"results"===actionData.name&&(!function(editor,ch){editor.insertContent(ch)}(editor,actionData.value),dialogApi.close())},buttons:[{type:"cancel",text:"Close",primary:!0}]}},dialogApi=editor.windowManager.open(getInitialState());dialogApi.focus("pattern"),database.hasLoaded()||(dialogApi.block("Loading emoticons..."),database.waitForLoad().then((function(){dialogApi.redial(getInitialState()),updateFilter.throttle(dialogApi),dialogApi.focus("pattern"),dialogApi.unblock()})).catch((function(_err){dialogApi.redial({title:"Emoticons",body:{type:"panel",items:[{type:"alertbanner",level:"error",icon:"warning",text:"<p>Could not load emoticons</p>"}]},buttons:[{type:"cancel",text:"Close",primary:!0}],initialData:{pattern:"",results:[]}}),dialogApi.focus("pattern"),dialogApi.unblock()})))};!function Plugin(){global$3.add("emoticons",(function(editor,pluginUrl){var databaseUrl=function(editor,pluginUrl){var database=function(editor){return editor.getParam("emoticons_database","emojis","string")}(editor);return editor.getParam("emoticons_database_url",pluginUrl+"/js/"+database+editor.suffix+".js","string")}(editor,pluginUrl),databaseId=function(editor){return editor.getParam("emoticons_database_id","tinymce.plugins.emoticons","string")}(editor),database=initDatabase(editor,databaseUrl,databaseId);!function(editor,database){editor.addCommand("mceEmoticons",(function(){return open(editor,database)}))}(editor,database),function(editor){var onAction=function(){return editor.execCommand("mceEmoticons")};editor.ui.registry.addButton("emoticons",{tooltip:"Emoticons",icon:"emoji",onAction:onAction}),editor.ui.registry.addMenuItem("emoticons",{text:"Emoticons...",icon:"emoji",onAction:onAction})}(editor),function(editor,database){editor.ui.registry.addAutocompleter("emoticons",{ch:":",columns:"auto",minChars:2,fetch:function(pattern,maxResults){return database.waitForLoad().then((function(){var candidates=database.listAll();return emojisFrom(candidates,pattern,Optional.some(maxResults))}))},onAction:function(autocompleteApi,rng,value){editor.selection.setRng(rng),editor.insertContent(value),autocompleteApi.hide()}})}(editor,database),function(editor){editor.on("PreInit",(function(){editor.parser.addAttributeFilter("data-emoticon",(function(nodes){!function(xs,f){for(var i=0,len=xs.length;i<len;i++)f(xs[i],i)}(nodes,(function(node){node.attr("data-mce-resize","false"),node.attr("data-mce-placeholder","1")}))}))}))}(editor)}))}()}();