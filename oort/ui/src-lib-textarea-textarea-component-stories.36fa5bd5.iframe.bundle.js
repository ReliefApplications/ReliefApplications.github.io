/*! For license information please see src-lib-textarea-textarea-component-stories.36fa5bd5.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkoort_front=self.webpackChunkoort_front||[]).push([[58],{"./node_modules/@angular/cdk/fesm2020/coercion.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Eq:()=>coerceArray,HM:()=>coerceCssPixelValue,Ig:()=>coerceBooleanProperty,fI:()=>coerceElement,su:()=>coerceNumberProperty});var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");function coerceBooleanProperty(value){return null!=value&&"false"!=`${value}`}function coerceNumberProperty(value,fallbackValue=0){return function _isNumberValue(value){return!isNaN(parseFloat(value))&&!isNaN(Number(value))}(value)?Number(value):fallbackValue}function coerceArray(value){return Array.isArray(value)?value:[value]}function coerceCssPixelValue(value){return null==value?"":"string"==typeof value?value:`${value}px`}function coerceElement(elementOrRef){return elementOrRef instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef?elementOrRef.nativeElement:elementOrRef}},"./libs/ui/src/lib/textarea/textarea.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormTextarea:()=>FormTextarea,Primary:()=>Primary,default:()=>textarea_component_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var _class,textarea_componentngResource=__webpack_require__("./libs/ui/src/lib/textarea/textarea.component.scss?ngResource"),textarea_componentngResource_default=__webpack_require__.n(textarea_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs");const CONTROL_VALUE_ACCESSOR={provide:fesm2020_forms.JU,useExisting:(0,core.forwardRef)((()=>TextareaComponent)),multi:!0};let TextareaComponent=((_class=class TextareaComponent{constructor(){this.value="",this.label="",this.placeholder="",this.maxRows=5,this.minRowsNumber=2,this.valueChange=new core.EventEmitter}set minRows(rows){rows&&(this.minRowsNumber=rows,rows>this.maxRows&&(this.maxRows=rows))}registerOnChange(fn){this.onChanged=fn,console.log("registerOnChange")}registerOnTouched(fn){this.onTouched=fn,console.log("registerOnTouched")}writeValue(value){this.value=value,console.log("writeValue =",this.value)}onTextChange(e){this.value=e.target.value,this.onTouched&&this.onChanged&&(this.onTouched(),this.onChanged(this.value)),this.valueChange.emit(this.value),console.log(this.value)}}).propDecorators={value:[{type:core.Input}],label:[{type:core.Input}],placeholder:[{type:core.Input}],name:[{type:core.Input}],minRows:[{type:core.Input}],maxRows:[{type:core.Input}],autosize:[{type:core.ViewChild,args:["autosize"]}]},_class);TextareaComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"ui-textarea",template:'<div>\n  <ng-container *ngIf="label">\n    <label\n      [for]="name"\n      class="block text-sm font-medium leading-6 text-gray-900"\n      >{{ label }}</label\n    >\n  </ng-container>\n  <div [ngClass]="{ \'mt-2\': label }">\n    <textarea\n      cdkTextareaAutosize\n      #autosize="cdkTextareaAutosize"\n      [cdkAutosizeMinRows]="minRowsNumber"\n      [cdkAutosizeMaxRows]="maxRows"\n      class="block w-full rounded-md border-0 px-2 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:text-sm sm:leading-6"\n      [placeholder]="placeholder"\n      [name]="name"\n      (input)="onTextChange($event)"\n      [value]="value"\n    >\n    </textarea>\n  </div>\n</div>\n',providers:[CONTROL_VALUE_ACCESSOR],styles:[textarea_componentngResource_default()]})],TextareaComponent);var common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),platform=__webpack_require__("./node_modules/@angular/cdk/fesm2020/platform.mjs"),coercion=__webpack_require__("./node_modules/@angular/cdk/fesm2020/coercion.mjs"),empty=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/empty.js"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),fromEvent=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js"),auditTime=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/auditTime.js"),takeUntil=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js");const listenerOptions=(0,platform.i$)({passive:!0});class AutofillMonitor{constructor(_platform,_ngZone){this._platform=_platform,this._ngZone=_ngZone,this._monitoredElements=new Map}monitor(elementOrRef){if(!this._platform.isBrowser)return empty.E;const element=(0,coercion.fI)(elementOrRef),info=this._monitoredElements.get(element);if(info)return info.subject;const result=new Subject.x,cssClass="cdk-text-field-autofilled",listener=event=>{"cdk-text-field-autofill-start"!==event.animationName||element.classList.contains(cssClass)?"cdk-text-field-autofill-end"===event.animationName&&element.classList.contains(cssClass)&&(element.classList.remove(cssClass),this._ngZone.run((()=>result.next({target:event.target,isAutofilled:!1})))):(element.classList.add(cssClass),this._ngZone.run((()=>result.next({target:event.target,isAutofilled:!0}))))};return this._ngZone.runOutsideAngular((()=>{element.addEventListener("animationstart",listener,listenerOptions),element.classList.add("cdk-text-field-autofill-monitored")})),this._monitoredElements.set(element,{subject:result,unlisten:()=>{element.removeEventListener("animationstart",listener,listenerOptions)}}),result}stopMonitoring(elementOrRef){const element=(0,coercion.fI)(elementOrRef),info=this._monitoredElements.get(element);info&&(info.unlisten(),info.subject.complete(),element.classList.remove("cdk-text-field-autofill-monitored"),element.classList.remove("cdk-text-field-autofilled"),this._monitoredElements.delete(element))}ngOnDestroy(){this._monitoredElements.forEach(((_info,element)=>this.stopMonitoring(element)))}}AutofillMonitor.ɵfac=function AutofillMonitor_Factory(t){return new(t||AutofillMonitor)(core["ɵɵinject"](platform.t4),core["ɵɵinject"](core.NgZone))},AutofillMonitor.ɵprov=core["ɵɵdefineInjectable"]({token:AutofillMonitor,factory:AutofillMonitor.ɵfac,providedIn:"root"}),("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](AutofillMonitor,[{type:core.Injectable,args:[{providedIn:"root"}]}],(function(){return[{type:platform.t4},{type:core.NgZone}]}),null);class CdkAutofill{constructor(_elementRef,_autofillMonitor){this._elementRef=_elementRef,this._autofillMonitor=_autofillMonitor,this.cdkAutofill=new core.EventEmitter}ngOnInit(){this._autofillMonitor.monitor(this._elementRef).subscribe((event=>this.cdkAutofill.emit(event)))}ngOnDestroy(){this._autofillMonitor.stopMonitoring(this._elementRef)}}CdkAutofill.ɵfac=function CdkAutofill_Factory(t){return new(t||CdkAutofill)(core["ɵɵdirectiveInject"](core.ElementRef),core["ɵɵdirectiveInject"](AutofillMonitor))},CdkAutofill.ɵdir=core["ɵɵdefineDirective"]({type:CdkAutofill,selectors:[["","cdkAutofill",""]],outputs:{cdkAutofill:"cdkAutofill"}}),("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](CdkAutofill,[{type:core.Directive,args:[{selector:"[cdkAutofill]"}]}],(function(){return[{type:core.ElementRef},{type:AutofillMonitor}]}),{cdkAutofill:[{type:core.Output}]});class CdkTextareaAutosize{get minRows(){return this._minRows}set minRows(value){this._minRows=(0,coercion.su)(value),this._setMinHeight()}get maxRows(){return this._maxRows}set maxRows(value){this._maxRows=(0,coercion.su)(value),this._setMaxHeight()}get enabled(){return this._enabled}set enabled(value){value=(0,coercion.Ig)(value),this._enabled!==value&&((this._enabled=value)?this.resizeToFitContent(!0):this.reset())}get placeholder(){return this._textareaElement.placeholder}set placeholder(value){this._cachedPlaceholderHeight=void 0,value?this._textareaElement.setAttribute("placeholder",value):this._textareaElement.removeAttribute("placeholder"),this._cacheTextareaPlaceholderHeight()}constructor(_elementRef,_platform,_ngZone,document){this._elementRef=_elementRef,this._platform=_platform,this._ngZone=_ngZone,this._destroyed=new Subject.x,this._enabled=!0,this._previousMinRows=-1,this._isViewInited=!1,this._handleFocusEvent=event=>{this._hasFocus="focus"===event.type},this._document=document,this._textareaElement=this._elementRef.nativeElement}_setMinHeight(){const minHeight=this.minRows&&this._cachedLineHeight?this.minRows*this._cachedLineHeight+"px":null;minHeight&&(this._textareaElement.style.minHeight=minHeight)}_setMaxHeight(){const maxHeight=this.maxRows&&this._cachedLineHeight?this.maxRows*this._cachedLineHeight+"px":null;maxHeight&&(this._textareaElement.style.maxHeight=maxHeight)}ngAfterViewInit(){this._platform.isBrowser&&(this._initialHeight=this._textareaElement.style.height,this.resizeToFitContent(),this._ngZone.runOutsideAngular((()=>{const window=this._getWindow();(0,fromEvent.R)(window,"resize").pipe((0,auditTime.e)(16),(0,takeUntil.R)(this._destroyed)).subscribe((()=>this.resizeToFitContent(!0))),this._textareaElement.addEventListener("focus",this._handleFocusEvent),this._textareaElement.addEventListener("blur",this._handleFocusEvent)})),this._isViewInited=!0,this.resizeToFitContent(!0))}ngOnDestroy(){this._textareaElement.removeEventListener("focus",this._handleFocusEvent),this._textareaElement.removeEventListener("blur",this._handleFocusEvent),this._destroyed.next(),this._destroyed.complete()}_cacheTextareaLineHeight(){if(this._cachedLineHeight)return;let textareaClone=this._textareaElement.cloneNode(!1);textareaClone.rows=1,textareaClone.style.position="absolute",textareaClone.style.visibility="hidden",textareaClone.style.border="none",textareaClone.style.padding="0",textareaClone.style.height="",textareaClone.style.minHeight="",textareaClone.style.maxHeight="",textareaClone.style.overflow="hidden",this._textareaElement.parentNode.appendChild(textareaClone),this._cachedLineHeight=textareaClone.clientHeight,textareaClone.remove(),this._setMinHeight(),this._setMaxHeight()}_measureScrollHeight(){const element=this._textareaElement,previousMargin=element.style.marginBottom||"",isFirefox=this._platform.FIREFOX,needsMarginFiller=isFirefox&&this._hasFocus,measuringClass=isFirefox?"cdk-textarea-autosize-measuring-firefox":"cdk-textarea-autosize-measuring";needsMarginFiller&&(element.style.marginBottom=`${element.clientHeight}px`),element.classList.add(measuringClass);const scrollHeight=element.scrollHeight-4;return element.classList.remove(measuringClass),needsMarginFiller&&(element.style.marginBottom=previousMargin),scrollHeight}_cacheTextareaPlaceholderHeight(){if(!this._isViewInited||null!=this._cachedPlaceholderHeight)return;if(!this.placeholder)return void(this._cachedPlaceholderHeight=0);const value=this._textareaElement.value;this._textareaElement.value=this._textareaElement.placeholder,this._cachedPlaceholderHeight=this._measureScrollHeight(),this._textareaElement.value=value}ngDoCheck(){this._platform.isBrowser&&this.resizeToFitContent()}resizeToFitContent(force=!1){if(!this._enabled)return;if(this._cacheTextareaLineHeight(),this._cacheTextareaPlaceholderHeight(),!this._cachedLineHeight)return;const textarea=this._elementRef.nativeElement,value=textarea.value;if(!force&&this._minRows===this._previousMinRows&&value===this._previousValue)return;const scrollHeight=this._measureScrollHeight(),height=Math.max(scrollHeight,this._cachedPlaceholderHeight||0);textarea.style.height=`${height}px`,this._ngZone.runOutsideAngular((()=>{"undefined"!=typeof requestAnimationFrame?requestAnimationFrame((()=>this._scrollToCaretPosition(textarea))):setTimeout((()=>this._scrollToCaretPosition(textarea)))})),this._previousValue=value,this._previousMinRows=this._minRows}reset(){void 0!==this._initialHeight&&(this._textareaElement.style.height=this._initialHeight)}_noopInputHandler(){}_getDocument(){return this._document||document}_getWindow(){return this._getDocument().defaultView||window}_scrollToCaretPosition(textarea){const{selectionStart,selectionEnd}=textarea;!this._destroyed.isStopped&&this._hasFocus&&textarea.setSelectionRange(selectionStart,selectionEnd)}}CdkTextareaAutosize.ɵfac=function CdkTextareaAutosize_Factory(t){return new(t||CdkTextareaAutosize)(core["ɵɵdirectiveInject"](core.ElementRef),core["ɵɵdirectiveInject"](platform.t4),core["ɵɵdirectiveInject"](core.NgZone),core["ɵɵdirectiveInject"](common.DOCUMENT,8))},CdkTextareaAutosize.ɵdir=core["ɵɵdefineDirective"]({type:CdkTextareaAutosize,selectors:[["textarea","cdkTextareaAutosize",""]],hostAttrs:["rows","1",1,"cdk-textarea-autosize"],hostBindings:function CdkTextareaAutosize_HostBindings(rf,ctx){1&rf&&core["ɵɵlistener"]("input",(function CdkTextareaAutosize_input_HostBindingHandler(){return ctx._noopInputHandler()}))},inputs:{minRows:["cdkAutosizeMinRows","minRows"],maxRows:["cdkAutosizeMaxRows","maxRows"],enabled:["cdkTextareaAutosize","enabled"],placeholder:"placeholder"},exportAs:["cdkTextareaAutosize"]}),("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](CdkTextareaAutosize,[{type:core.Directive,args:[{selector:"textarea[cdkTextareaAutosize]",exportAs:"cdkTextareaAutosize",host:{class:"cdk-textarea-autosize",rows:"1","(input)":"_noopInputHandler()"}}]}],(function(){return[{type:core.ElementRef},{type:platform.t4},{type:core.NgZone},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[common.DOCUMENT]}]}]}),{minRows:[{type:core.Input,args:["cdkAutosizeMinRows"]}],maxRows:[{type:core.Input,args:["cdkAutosizeMaxRows"]}],enabled:[{type:core.Input,args:["cdkTextareaAutosize"]}],placeholder:[{type:core.Input}]});class TextFieldModule{}TextFieldModule.ɵfac=function TextFieldModule_Factory(t){return new(t||TextFieldModule)},TextFieldModule.ɵmod=core["ɵɵdefineNgModule"]({type:TextFieldModule,declarations:[CdkAutofill,CdkTextareaAutosize],exports:[CdkAutofill,CdkTextareaAutosize]}),TextFieldModule.ɵinj=core["ɵɵdefineInjector"]({}),("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](TextFieldModule,[{type:core.NgModule,args:[{declarations:[CdkAutofill,CdkTextareaAutosize],exports:[CdkAutofill,CdkTextareaAutosize]}]}],null,null);let TextareaModule=class TextareaModule{};TextareaModule=(0,tslib_es6.gn)([(0,core.NgModule)({declarations:[TextareaComponent],imports:[common.CommonModule,TextFieldModule],exports:[TextareaComponent]})],TextareaModule);const textarea_component_stories={title:"Textarea",component:TextareaComponent,argTypes:{value:{control:"text"},label:{control:"text"},name:{control:"text"},placeholder:{control:"text"},minRows:{type:"number"},maxRows:{type:"number"}},decorators:[(0,dist.moduleMetadata)({imports:[TextareaModule,fesm2020_forms.UX]})]},FormTextarea=(args=>{const formGroup=new fesm2020_forms.cw({textarea:new fesm2020_forms.NI("Default value")});return args.label="Form control textarea",{component:TextareaComponent,template:`\n      <form [formGroup]="formGroup">\n      <ui-textarea [placeholder]="'${args.placeholder}'" [label]="'${args.label}'" formControlName="textarea"></ui-textarea>\n        </form>\n        <br>\n        <p>value: {{formGroup.get('textarea').value}}</p>\n        <p>touched: {{formGroup.get('textarea').touched}}</p>\n        `,props:{...args,formGroup}}}).bind({}),Primary=(args=>({props:args})).bind({});Primary.args={value:"Hi",label:"Message",placeholder:"Type something",name:"textarea",minRows:15}},"./libs/ui/src/lib/textarea/textarea.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);